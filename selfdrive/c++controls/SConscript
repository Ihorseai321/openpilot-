Import('env', 'common', 'messaging')

# cpp_path = [
#     "#phonelibs/acado/include",
#     "#phonelibs/acado/include/acado",
#     "#phonelibs/qpoases/INCLUDE",
#     "#phonelibs/qpoases/INCLUDE/EXTRAS",
#     "#phonelibs/qpoases/SRC/",
#     "#phonelibs/qpoases",
#     "lib/lateral_mpc/lib_mpc_export",
#     "lib/longitudinal_mpc/lib_mpc_export",
# ]

loc_objs = [
  "plannerd.cc",
  "lib/handler.cc",
  "lib/lateral_mpc/lateral_mpc.cc",
  "lib/longitudinal_mpc/longitudinal_mpc.cc",
  "lib/pathplanner.cc",
  "lib/vehicle_model.cc",
  "lib/planner.cc",
  "lib/long_mpc.cc",
  "lib/fcw.cc",
  "lib/lane_planner.cc",
  "lib/utils.cc"
]

# lat_interface_dir = Dir('lib/lateral_mpc/lib_mpc_export')
# lon_interface_dir = Dir('lib/longitudinal_mpc/lib_mpc_export')

# SConscript(['#phonelibs/qpoases/SConscript'], variant_dir='lib/lateral_mpc/lib_qp', exports=['lat_interface_dir'])
# SConscript(['#phonelibs/qpoases/SConscript'], variant_dir='lib/longitudinal_mpc/lib_qp', exports=['lon_interface_dir'])

loc_libs = [messaging, 'zmq', 'capnp', 'kj', 'pthread', 'm', 'lateralmpc', 'longmpc']
env.Program("plannerd", loc_objs, LIBS=loc_libs, LIBPATH=['#selfdrive/c++controls/lib/lateral_mpc/', '#selfdrive/c++controls/lib/longitudinal_mpc/'])

# ctl_objs = [
#   "controlsd.cc",
#   "t_pub.cc",
#   "lib/toyota_rav4_2017_pt_generated.cc" ,
#   "lib/common.cc",
#   "lib/parser.cc",
#   "lib/canparser.cc",
#   "lib/message_state.cc",
#   "lib/common_dbc.cc",
#   "lib/carstate.cc",
#   "lib/interface.cc",
#   "lib/ctl_handler.cc",
#   "lib/vehicle_model.cc",
#   "lib/kf.cc",
#   "lib/latcontrol_pid.cc",
#   "lib/longcontrol.cc",
#   "lib/utils.cc",
#   "lib/ratekeeper.cc",
#   "lib/pid.cc",
#   # "lib/dbc.cc"
# ]

# ctl_libs = [messaging, 'zmq', 'capnp', 'kj', 'pthread', 'm']
# env.Program("controlsd", ctl_objs, LIBS=ctl_libs)

# env.Program("test", [
#   "test.cc",
#   "lib/toyota_rav4_2017_pt_generated.cc" ,
#   "lib/common.cc",
#   "lib/parser.cc",
#   "lib/canparser.cc",
#   "lib/message_state.cc",
#   "lib/common_dbc.cc",
#   "lib/carstate.cc",
#   "lib/interface.cc",
#   "lib/ctl_handler.cc",
#   "lib/vehicle_model.cc",
#   "lib/kf.cc",
#   "lib/latcontrol_pid.cc",
#   "lib/longcontrol.cc",
#   "lib/utils.cc",
#   "lib/ratekeeper.cc",
#   "lib/pid.cc"],
#   LIBS=ctl_libs)

# i_objs = [
#   "test_interface.cc",
#   "lib/common.cc",
#   "lib/parser.cc",
#   "lib/canparser.cc",
#   "lib/message_state.cc",
#   "lib/dbc.cc",
#   "lib/carstate.cc",
#   "lib/interface.cc",
#   "lib/ctl_handler.cc",
#   "lib/vehicle_model.cc",
#   "lib/kf.cc",
#   "lib/latcontrol_pid.cc",
#   "lib/longcontrol.cc",
#   "lib/utils.cc",
#   "lib/ratekeeper.cc",
#   "lib/pid.cc"
# ]
# env.Program("interface", i_objs, LIBS=ctl_libs)
  



