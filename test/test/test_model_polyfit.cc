#include <iostream>
#define M 4
#define N 50
//selfdrive/controls/lib/lane_planner.py--model_polyfit()

void model_polyfit(float points[N], float path_pinv[M][N], float ret[M])
{
    float sum;
    for(int i = 0; i < M; ++i){
        sum = 0.0;
        for(int j = 0; j < N; ++j){
            sum += path_pinv[i][j] * points[j];
        }
        ret[i] = sum;
    }
}

int main(int argc, char *argv[])
{
    float points[50] = {-0.0001957019, -3.450521e-05, -0.0006073183, -0.00054086425, -0.00086613634, -0.00087764795, -0.0019247084, -0.0017599487, -0.002080593, -0.0024175213, -0.002956423, -0.0034865367, -0.0040425276, -0.0041195555, -0.0047795735, -0.0050894446, -0.0053191474, -0.0058684302, -0.0063504456, -0.0062350063, -0.0063345688, -0.0066577434, -0.0076768505, -0.009072518, -0.00921346, -0.0097392909, -0.010966797, -0.012119547, -0.012941108, -0.013490796, -0.013896115, -0.01455108, -0.014949935, -0.016045352, -0.017069425, -0.017926946, -0.018709496, -0.020198151, -0.021183133, -0.022875967, -0.023689602, -0.024834651, -0.024924252, -0.026009329, -0.027828034, -0.02797343, -0.029647391, -0.032089163, -0.032914672, -0.035047546};
    float path_pinv[4][50] = {{-1.99208856e-05, -1.50423014e-05, -1.06719030e-05, -6.78806556e-06, -3.36916411e-06, -3.93573728e-07,  2.16033052e-06,  4.31417356e-06,  6.08958032e-06,  7.50817574e-06,  8.59158474e-06,  9.36143225e-06,  9.83934320e-06,  1.00469425e-05,  1.00058552e-05,  9.73770603e-06,  9.26412006e-06,  8.60672219e-06,  7.78713734e-06,  6.82699044e-06, 5.74790643e-06,  4.57151023e-06,  3.31942677e-06,  2.01328099e-06, 6.74697820e-07, -6.74697820e-07, -2.01328099e-06, -3.31942677e-06,-4.57151023e-06, -5.74790643e-06, -6.82699044e-06, -7.78713734e-06,-8.60672219e-06, -9.26412006e-06, -9.73770603e-06, -1.00058552e-05,-1.00469425e-05, -9.83934320e-06, -9.36143225e-06, -8.59158474e-06,-7.50817574e-06, -6.08958032e-06, -4.31417356e-06, -2.16033052e-06, 3.93573728e-07,  3.36916411e-06,  6.78806556e-06,  1.06719030e-05, 1.50423014e-05,  1.99208856e-05}, {1.69042944e-03,  1.30415011e-03,  9.56376745e-04,  6.45519919e-04, 3.69990197e-04,  1.28198146e-04, -8.14456654e-05, -2.60530671e-04,-4.10646302e-04, -5.33381991e-04, -6.30327170e-04, -7.03071273e-04,-7.53203730e-04, -7.82313976e-04, -7.91991441e-04, -7.83825558e-04,-7.59405760e-04, -7.20321479e-04, -6.68162148e-04, -6.04517198e-04,-5.30976063e-04, -4.49128174e-04, -3.60562963e-04, -2.66869864e-04,-1.69638309e-04, -7.04577295e-05,  2.90824417e-05,  1.27392772e-04, 2.22883830e-04,  3.13966182e-04,  3.99050396e-04,  4.76547040e-04, 5.44866682e-04,  6.02419889e-04,  6.47617229e-04,  6.78869269e-04, 6.94586577e-04,  6.93179721e-04,  6.73059268e-04,  6.32635786e-04, 5.70319843e-04,  4.84522006e-04,  3.73652843e-04,  2.36122921e-04, 7.03428084e-05, -1.25276927e-04, -3.52325719e-04, -6.12392998e-04,-9.07068197e-04, -1.23794075e-03}, {-0.04184809, -0.03343724, -0.02580767, -0.01892854, -0.01276903, -0.00729828, -0.00248546,  0.00170028,  0.00528976,  0.00831384, 0.01080334,  0.01278911,  0.014302  ,  0.01537282,  0.01603244, 0.01631168,  0.01624139,  0.0158524 ,  0.01517556,  0.0142417 , 0.01308166,  0.01172628,  0.01020641,  0.00855287,  0.00679652, 0.00496819,  0.00309871,  0.00121893, -0.00064031, -0.00244817,-0.00417382, -0.00578642, -0.00725512, -0.00854908, -0.00963747,-0.01048945, -0.01107418, -0.01136082, -0.01131853, -0.01091646,-0.01012379, -0.00890967, -0.00724326, -0.00509373, -0.00243023, 0.00077808,  0.00456203,  0.00895246,  0.01398022,  0.01967614}, {0.27644156,  0.23626398,  0.19934773,  0.16557329,  0.13482114,  0.10697174,  0.08190558,  0.05950312,  0.03964484,  0.02221122,  0.00708273, -0.00586016, -0.01673696, -0.02566721, -0.03277043, -0.03816614, -0.04197388, -0.04431316, -0.04530351, -0.04506446, -0.04371553, -0.04137625, -0.03816614, -0.03420473, -0.02961154,-0.0245061 , -0.01900794, -0.01323657, -0.00731153, -0.00135234, 0.00452147,  0.01019039,  0.01553488,  0.02043541,  0.02477248, 0.02842653,  0.03127807,  0.03320755,  0.03409545,  0.03382225,  0.03226842,  0.02931444,  0.02484078,  0.01872791,  0.01085631,  0.00110646, -0.01064117, -0.0245061 , -0.04060787, -0.059066  }};
    float result[4] = {0, 0, 0, 0};
    model_polyfit(points, path_pinv, result);
    std::cout << result[0] << ", "<< result[1] << ", " << result[2] <<  ", " << result[3] << std::endl;
    return 0;
}
